{
    "name": "Gmail to jira ticket",
    "flow": [
        {
            "id": 2,
            "module": "google-email:TriggerNewEmail",
            "version": 2,
            "parameters": {
                "folder": "[Gmail]/All Mail",
                "xGmRaw": "subject:External OR subject:Task OR from:Vladimir",
                "account": 1662578,
                "markSeen": false,
                "maxResults": 1,
                "searchType": "gmail"
            },
            "mapper": {},
            "metadata": {
                "designer": {
                    "x": 0,
                    "y": 0
                },
                "restore": {
                    "parameters": {
                        "folder": {
                            "path": [
                                "All Mail",
                                "All Mail"
                            ]
                        },
                        "account": {
                            "data": {
                                "scoped": "true",
                                "connection": "google-restricted"
                            },
                            "label": "Test send email (vincent@prellus.com)"
                        },
                        "searchType": {
                            "label": "Gmail filter"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "account",
                        "type": "account:google-restricted",
                        "label": "Connection",
                        "required": true
                    },
                    {
                        "name": "searchType",
                        "type": "select",
                        "label": "Filter type",
                        "required": true,
                        "validate": {
                            "enum": [
                                "simple",
                                "gmail"
                            ]
                        }
                    },
                    {
                        "name": "markSeen",
                        "type": "boolean",
                        "label": "Mark email message(s) as read when fetched"
                    },
                    {
                        "name": "maxResults",
                        "type": "uinteger",
                        "label": "Maximum number of results",
                        "required": true
                    },
                    {
                        "name": "folder",
                        "type": "folder",
                        "label": "Folder",
                        "required": true
                    },
                    {
                        "name": "xGmRaw",
                        "type": "text",
                        "label": "Query",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 11,
            "module": "util:SetVariable2",
            "version": 1,
            "parameters": {},
            "mapper": {
                "name": "subject",
                "scope": "roundtrip",
                "value": "{{split(2.subject; \"-\")}}"
            },
            "metadata": {
                "designer": {
                    "x": 300,
                    "y": 0
                },
                "restore": {
                    "expect": {
                        "scope": {
                            "label": "One cycle"
                        }
                    }
                },
                "expect": [
                    {
                        "name": "name",
                        "type": "text",
                        "label": "Variable name",
                        "required": true
                    },
                    {
                        "name": "scope",
                        "type": "select",
                        "label": "Variable lifetime",
                        "required": true,
                        "validate": {
                            "enum": [
                                "roundtrip",
                                "execution"
                            ]
                        }
                    },
                    {
                        "name": "value",
                        "type": "any",
                        "label": "Variable value"
                    }
                ],
                "interface": [
                    {
                        "name": "subject",
                        "type": "any",
                        "label": "subject"
                    }
                ]
            }
        },
        {
            "id": 25,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 1667283
            },
            "mapper": {
                "select": "chat",
                "max_tokens": "545",
                "temperature": "1",
                "top_p": "1",
                "n_completions": "1",
                "response_format": "text",
                "model": "gpt-3.5-turbo",
                "messages": [
                    {
                        "role": "system",
                        "content": "Prompt: Extract the description of the task from the provided email_content. Include the entire email message in the output. Format the output in markdown and add mark down bullet for more details like needed to use softwares etc.\n\nRules:\n- Do not includes the names like sender and recipients\n- extract first the message of the content before extracting the bullet details\n\nExample Output:\n**Task Description**\n\n\\- **Task:** Address the old task related to the vulnerability tests and pentests for Chartam Prod\n\nenvironment to implement HTTPS.\n\n\\- **Action Items:**\n\n\\- Implement HTTPS in Chartam Prod environment.\n\n\\- Ensure usage of secure ciphers, specifically regarding sweet32 attacks.\n\n\\- Determine a time frame for completing the task.\n\n\\- Collaborate with Vladimir Calovic if assistance is required."
                    },
                    {
                        "role": "user",
                        "content": "email_content: {{2.text}}"
                    }
                ]
            },
            "metadata": {
                "designer": {
                    "x": 600,
                    "y": 0
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "label": "Open Ai Paul",
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            }
                        }
                    },
                    "expect": {
                        "select": {
                            "label": "Create a Chat Completion (GPT Models)"
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "Text"
                        },
                        "stop": {
                            "mode": "chose"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "chose",
                            "label": "gpt-3.5-turbo"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "System"
                                    }
                                },
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    }
                                }
                            ]
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "max_tokens",
                        "type": "number",
                        "label": "Max Tokens",
                        "required": true
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "type": "array",
                        "label": "Token Probability",
                        "spec": {
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability",
                            "name": "value"
                        }
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        },
                        "spec": {
                            "type": "text",
                            "label": "Stop Sequence",
                            "name": "value"
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "type": "array",
                        "label": "Other Input Parameters",
                        "spec": {
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter",
                            "name": "value"
                        }
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "messages",
                        "type": "array",
                        "label": "Messages",
                        "required": true,
                        "spec": {
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "options": [
                                        {
                                            "label": "System",
                                            "value": "system"
                                        },
                                        {
                                            "label": "User",
                                            "value": "user"
                                        },
                                        {
                                            "label": "Assistant",
                                            "value": "assistant"
                                        }
                                    ],
                                    "required": true
                                },
                                {
                                    "name": "content",
                                    "type": "text",
                                    "label": "Message Content"
                                }
                            ],
                            "type": "collection",
                            "label": "Message",
                            "name": "value"
                        }
                    }
                ]
            }
        },
        {
            "id": 6,
            "module": "jira:createAnIssue",
            "version": 2,
            "parameters": {
                "__IMTCONN__": 2025933
            },
            "mapper": {
                "project": "10000",
                "issueType": "10001",
                "summary": "{{11.subject[2]}}",
                "description": "{{25.result}}",
                "reporter": "712020:49a46080-5d5a-47b5-a708-ec6c18961ecf",
                "customFields": {}
            },
            "metadata": {
                "designer": {
                    "x": 934,
                    "y": -1
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "label": "My Jira Cloud Platform connection (John Vincent Ramada)",
                            "data": {
                                "scoped": "true",
                                "connection": "jira"
                            }
                        }
                    },
                    "expect": {
                        "project": {
                            "label": "My Kanban Project"
                        },
                        "updateHistory": {
                            "mode": "chose"
                        },
                        "issueType": {
                            "label": "Task"
                        },
                        "status": {
                            "mode": "chose"
                        },
                        "labels": {
                            "mode": "chose"
                        },
                        "customFields": {
                            "nested": {
                                "customfield_10021": {
                                    "mode": "chose"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:jira",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "project",
                        "type": "select",
                        "label": "Project ID",
                        "required": true
                    },
                    {
                        "name": "updateHistory",
                        "type": "boolean",
                        "label": "Update History"
                    },
                    {
                        "name": "issueType",
                        "type": "select",
                        "label": "Issue Type ID",
                        "required": true
                    },
                    {
                        "name": "status",
                        "type": "select",
                        "label": "Status"
                    },
                    {
                        "name": "summary",
                        "type": "any",
                        "label": "Summary",
                        "required": true
                    },
                    {
                        "name": "description",
                        "type": "any",
                        "label": "Description",
                        "metadata": {
                            "isDescription": true
                        }
                    },
                    {
                        "name": "reporter",
                        "type": "text",
                        "label": "Reporter",
                        "metadata": {
                            "isObjectWithId": true
                        },
                        "required": true
                    },
                    {
                        "name": "assignee",
                        "type": "text",
                        "label": "Assignee",
                        "metadata": {
                            "isObjectWithId": true
                        }
                    },
                    {
                        "name": "issuerestriction",
                        "type": "text",
                        "label": "Restrict to"
                    },
                    {
                        "name": "labels",
                        "type": "array",
                        "label": "Labels",
                        "spec": {
                            "type": "text",
                            "name": "value"
                        }
                    },
                    {
                        "name": "parent",
                        "type": "text",
                        "label": "Parent Key",
                        "metadata": {
                            "isObjectWithKey": true
                        }
                    },
                    {
                        "name": "customFields",
                        "type": "collection",
                        "label": "Custom Fields",
                        "spec": [
                            {
                                "name": "customfield_10000",
                                "type": "any",
                                "label": "Development"
                            },
                            {
                                "name": "customfield_10019",
                                "type": "any",
                                "label": "Rank"
                            },
                            {
                                "name": "customfield_10021",
                                "type": "select",
                                "label": "Flagged",
                                "metadata": {
                                    "isArrayWithId": true
                                },
                                "multiple": true,
                                "validate": {
                                    "enum": [
                                        "10019"
                                    ]
                                }
                            },
                            {
                                "name": "customfield_10031",
                                "type": "any",
                                "label": "Vulnerability"
                            }
                        ]
                    }
                ]
            }
        }
    ],
    "metadata": {
        "instant": false,
        "version": 1,
        "scenario": {
            "roundtrips": 1,
            "maxErrors": 3,
            "autoCommit": true,
            "autoCommitTriggerLast": true,
            "sequential": false,
            "slots": null,
            "confidential": false,
            "dataloss": false,
            "dlq": false,
            "freshVariables": false
        },
        "designer": {
            "orphans": []
        },
        "zone": "eu2.make.com"
    }
}